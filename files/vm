#!/bin/bash
# vm - provision a new Fedora server virtual machine
# Copyright (C) 2021 - 2022 Stefan Widgren
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

display_usage() {
    cat <<-EOF
Usage:
vm [options]...

Options:
-a, --authorized-key=FILENAME
    Specify a public key to authorise logins on the new virtual
    machine. The argument must be the full path to a key, for example,
    '/home/user/.ssh/id_rsa.pub'.

-f, --fedora-version=VERSION
    Specify the version of the Fedora Server to install, where VERSION
    is one of 34 or 35.  If this option is not specified, version 35
    will be used.

-h, --help
    Display usage and exit.

-i, --ip-address=ADDRESS
    The IP-address of the new virtual machine.  If this option is not
    specified, '192.168.122.2' will be used.

-n, --name=NAME
    Name of the new guest virtual machine instance.  Also used for the
    hostname of the machine.  If this option is not specified, 'vm'
    will be used.

-p, --pass=PASSNAME
    Use the PASSNAME password from the pass manager of 'USERNAME' to
    set the password for the user on the virtual machine.  Note that
    only the first line of the file in the pass manager will be
    considered.

-u, --user=USER
    Name of the user on the new guest virtual machine instance.  If
    this option is not specified, the value of the environmental
    variable 'USERNAME' will be used.

EOF
}

USER=$USERNAME
NAME=vm
IP=192.168.122.2
FEDORA_VERSION=36
RAM=4096
VCPUS=2
SIZE=20
PASSWORD=

# Note that we use "$@" to let each command-line parameter expand to a
# separate word. The quotes around "$@" are essential!  We need TEMP
# as the 'eval set --' would nuke the return value of getopt.
TEMP=$(getopt --options 'a:f:hi:n:p:u:' --long 'authorized-key:,fedora-version:,help,ip-address:,name:,pass:,user:' --name 'vm' -- "$@")

if [ $? -ne 0 ]; then
    echo 'Terminating...' >&2
    exit 1
fi

# Note the quotes around "$TEMP": they are essential!
eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
	'-a'|'--authorized-key')
	    AUTHORIZED_KEY=$2
	    shift 2
	    continue
	    ;;
	'-f'|'--fedora-version')
            FEDORA_VERSION=$2
	    shift 2
	    continue
	    ;;
	'-h'|'--help')
	    display_usage
	    exit 0
	    ;;
	'-i'|'--ip-address')
            IP=$2
	    shift 2
	    continue
	    ;;
	'-n'|'--name')
            NAME=$2
	    shift 2
	    continue
	    ;;
	'-p'|'--pass')
	    PASSWORD=$(sudo -u $USERNAME pass $2 | sed -n 1p | xargs openssl passwd -6)
	    shift 2
	    continue
	    ;;
	'-u'|'--user')
            USER=$2
	    shift 2
	    continue
	    ;;
	'--')
	    shift
	    break
	    ;;
	*)
	    echo 'Internal error!' >&2
	    exit 1
	    ;;
    esac
done

case "$FEDORA_VERSION" in
    '34')
        ISO=Fedora-Server-netinst-x86_64-$FEDORA_VERSION-1.2.iso
	OS_VARIANT=34
	;;
    '35')
        ISO=Fedora-Server-netinst-x86_64-$FEDORA_VERSION-1.2.iso
	OS_VARIANT=35
	;;
    '36')
        ISO=Fedora-Server-netinst-x86_64-$FEDORA_VERSION-1.5.iso
	OS_VARIANT=36
	;;
    *)
	echo "Error: invalid Fedora version: '$FEDORA_VERSION'" >&2
	display_usage
	exit 1
	;;
esac

if [[ $# -gt 0 ]]; then
    echo "Error: unrecognized remaining arguments: '$@'" >&2
    display_usage
    exit 1
fi

if [[ ! $IP =~ ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
    echo "Error: invalid IP address: '$IP'" >&2
    display_usage
    exit 1
fi

if [[ -z $PASSWORD ]]; then
    echo "Enter a password for the user '$USER' on the VM."
    PASSWORD=$(openssl passwd -6)
fi

# Download the Fedora server netinstall
if [[ ! -e /var/lib/libvirt/images/$ISO ]]; then
    curl \
        --location https://download.fedoraproject.org/pub/fedora/linux/releases/$FEDORA_VERSION/Server/x86_64/iso/$ISO \
        --output /var/lib/libvirt/images/$ISO
fi

# Generate a kickstart file for the VM
cat <<EOF > /tmp/ks-$IP.cfg
# Use text mode installation
text

# Keyboard layout
keyboard --vckeymap=se --xlayouts='se'

# System language
lang en_US.UTF-8

# Use network installation
url --mirrorlist="https://mirrors.fedoraproject.org/metalink?repo=fedora-$FEDORA_VERSION&arch=x86_64"
repo --name=fedora-updates --mirrorlist="https://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f$FEDORA_VERSION&arch=x86_64" --cost=0

# Network information
network --onboot=on --activate
network --bootproto=static --ip=$IP --netmask=255.255.255.0 --gateway=192.168.122.1 --nameserver=192.168.122.1 --device=link
network --hostname=$NAME

%packages
@^server-product-environment

%end

# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.3.3
ignoredisk --only-use=vda
autopart
# Partition clearing information
clearpart --none --initlabel

# System timezone
timezone Europe/Stockholm --utc

# Shutdown after installation
shutdown

# Lock root password
rootpw --lock

# Add a user
user --groups=wheel --name=$USER --password=$PASSWORD --iscrypted
EOF

if [[ -n $AUTHORIZED_KEY ]]; then
cat <<EOF >> /tmp/ks-$IP.cfg

%post
mkdir /home/$USER/.ssh
echo "$(cat $AUTHORIZED_KEY)" > /home/$USER/.ssh/authorized_keys
chmod 0700 /home/$USER/.ssh
chmod 0600 /home/$USER/.ssh/authorized_keys
chown -R $USER:$USER /home/$USER/.ssh
%end
EOF
fi

# Remove old disk.
rm -f /var/lib/libvirt/images/$NAME.qcow2

# Run 'virt-install' (in the background) to install the VM.
virt-install \
    --name $NAME \
    --description "Fedora $FEDORA_VERSION Server" \
    --ram $RAM \
    --vcpus $VCPUS \
    --disk path=/var/lib/libvirt/images/$NAME.qcow2,size=$SIZE \
    --os-type linux \
    --os-variant fedora$OS_VARIANT \
    --noautoconsole \
    --network bridge=virbr0 \
    --location /var/lib/libvirt/images/$ISO \
    --initrd-inject /tmp/ks-$IP.cfg \
    --extra-args "inst.ks=file:/ks-$IP.cfg" \
    &>/dev/null & disown;
